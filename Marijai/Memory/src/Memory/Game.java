/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Memory;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.Timer;

/**
 *
 * @author Baiba
 */
public class Game extends javax.swing.JPanel implements ActionListener {

    /**
     * Creates new form panel2
     */
    int n = 4;
    ArrayList<JButton> buttons = new ArrayList<>(n * 2);
    ArrayList<ImageIcon> iconList = new ArrayList<>();
    JButton selected1 = null;
    JButton selected2 = null;
    boolean isMatch = false;
    int count = 0;
    String time = "00 : 00";
    String iconsChosen = "";
    String sizeChosen = "";
    ImageIcon icon;
    ImageIcon background = new ImageIcon(this.getClass().getResource("/images/bg.jpg"));

    public Game() {
        initComponents();
        FileWriteRead addInfo = new FileWriteRead();
        addInfo.createDirectory();
        try {
            addInfo.addInfo(resultListLarge, resultListMedium);
        } catch (Exception files) {
            addInfo.createFiles();
        }
        try {
            addInfo.userInfo(userList);
        } catch (Exception files) {
            addInfo.createUserFile();
        }
        AddListen();
        labelEnd.setText("Choose your game options!");
        labelBackground.setIcon(background);
    }

//Taimeris
    Timer timer = new Timer(1000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent evt) {
            int min = 0;
            count++;
            //TODO var mēģināt saīsināt
            min = (count >= 60) ? (count / 60) : 0;

            if (count < 3600) {
                if (count < 60) {
                    time = String.valueOf(String.format("%02d", min)) + " : " + String.valueOf(String.format("%02d", count));
                } else {
                    time = String.valueOf(String.format("%02d", min)) + " : " + String.valueOf(String.format("%02d", (count % (min * 60))));
                }
                labelTime.setText("Time: " + time);
            } else {
                ((Timer) (evt.getSource())).stop();
            }
        }
    });

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        field = new javax.swing.JPanel();
        labelBackground = new javax.swing.JLabel();
        panelGameChose = new javax.swing.JPanel();
        newGame = new javax.swing.JButton();
        sizeMedium = new javax.swing.JToggleButton();
        sizeLarge = new javax.swing.JToggleButton();
        imPhotos = new javax.swing.JToggleButton();
        imCars = new javax.swing.JToggleButton();
        imClipart = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        addPlayer = new javax.swing.JButton();
        newPlayer = new javax.swing.JTextField();
        labelNewPlayer = new javax.swing.JLabel();
        labelPlayer = new javax.swing.JLabel();
        userList = new javax.swing.JComboBox<>();
        deletePlayer = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        labelEnd = new javax.swing.JLabel();
        labelTime = new javax.swing.JLabel();
        timerPause = new javax.swing.JToggleButton();
        tabbed2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        resultListLarge = new java.awt.List();
        jPanel4 = new javax.swing.JPanel();
        resultListMedium = new java.awt.List();

        setBackground(new java.awt.Color(215, 198, 172));
        setForeground(new java.awt.Color(102, 102, 102));

        field.setMaximumSize(new java.awt.Dimension(510, 510));
        field.setPreferredSize(new java.awt.Dimension(501, 501));

        labelBackground.setText("background");

        javax.swing.GroupLayout fieldLayout = new javax.swing.GroupLayout(field);
        field.setLayout(fieldLayout);
        fieldLayout.setHorizontalGroup(
            fieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelBackground, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        fieldLayout.setVerticalGroup(
            fieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelBackground, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );

        panelGameChose.setBackground(new java.awt.Color(239, 237, 223));
        panelGameChose.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        newGame.setBackground(new java.awt.Color(146, 103, 78));
        newGame.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        newGame.setForeground(new java.awt.Color(255, 255, 255));
        newGame.setText("LOAD GAME");
        newGame.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.lightGray, new java.awt.Color(51, 51, 51), java.awt.Color.darkGray));
        newGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameActionPerformed(evt);
            }
        });

        sizeMedium.setBackground(new java.awt.Color(200, 181, 151));
        sizeMedium.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        sizeMedium.setForeground(new java.awt.Color(51, 51, 51));
        sizeMedium.setText("Medium");
        sizeMedium.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, java.awt.Color.black, java.awt.Color.lightGray));

        sizeLarge.setBackground(new java.awt.Color(200, 181, 151));
        sizeLarge.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        sizeLarge.setForeground(new java.awt.Color(51, 51, 51));
        sizeLarge.setText("Large");
        sizeLarge.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, java.awt.Color.black, java.awt.Color.lightGray));

        imPhotos.setBackground(new java.awt.Color(215, 198, 172));
        imPhotos.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        imPhotos.setForeground(new java.awt.Color(51, 51, 51));
        imPhotos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/photos.jpg"))); // NOI18N
        imPhotos.setActionCommand("Photos");
        imPhotos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, java.awt.Color.black, java.awt.Color.lightGray));
        imPhotos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        imCars.setBackground(new java.awt.Color(215, 198, 172));
        imCars.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        imCars.setForeground(new java.awt.Color(51, 51, 51));
        imCars.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cars.jpg"))); // NOI18N
        imCars.setActionCommand("Cars");
        imCars.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, java.awt.Color.black, java.awt.Color.lightGray));
        imCars.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        imClipart.setBackground(new java.awt.Color(215, 198, 172));
        imClipart.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        imClipart.setForeground(new java.awt.Color(51, 51, 51));
        imClipart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/all.jpg"))); // NOI18N
        imClipart.setActionCommand("Clipart");
        imClipart.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, java.awt.Color.black, java.awt.Color.lightGray));
        imClipart.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout panelGameChoseLayout = new javax.swing.GroupLayout(panelGameChose);
        panelGameChose.setLayout(panelGameChoseLayout);
        panelGameChoseLayout.setHorizontalGroup(
            panelGameChoseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGameChoseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGameChoseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelGameChoseLayout.createSequentialGroup()
                        .addComponent(imPhotos, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(imCars, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(imClipart, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelGameChoseLayout.createSequentialGroup()
                        .addComponent(sizeMedium, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sizeLarge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelGameChoseLayout.setVerticalGroup(
            panelGameChoseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGameChoseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGameChoseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imPhotos, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelGameChoseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(imClipart, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(imCars, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelGameChoseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sizeLarge, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sizeMedium, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newGame, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(239, 237, 223));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jPanel1.setForeground(new java.awt.Color(153, 153, 153));

        addPlayer.setBackground(new java.awt.Color(215, 198, 172));
        addPlayer.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        addPlayer.setForeground(new java.awt.Color(51, 51, 51));
        addPlayer.setText("Add");
        addPlayer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, java.awt.Color.black, java.awt.Color.lightGray));
        addPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlayerActionPerformed(evt);
            }
        });

        newPlayer.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        labelNewPlayer.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        labelNewPlayer.setForeground(new java.awt.Color(51, 51, 51));
        labelNewPlayer.setText("New player: ");

        labelPlayer.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        labelPlayer.setForeground(new java.awt.Color(51, 51, 51));
        labelPlayer.setText("PLAYER: ");

        userList.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N

        deletePlayer.setBackground(new java.awt.Color(215, 198, 172));
        deletePlayer.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        deletePlayer.setForeground(new java.awt.Color(51, 51, 51));
        deletePlayer.setText("Delete");
        deletePlayer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, java.awt.Color.black, java.awt.Color.lightGray));
        deletePlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePlayerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelNewPlayer)
                    .addComponent(labelPlayer))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deletePlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userList, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPlayer)
                    .addComponent(deletePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newPlayer)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelNewPlayer)
                        .addComponent(addPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(239, 237, 223));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        labelEnd.setBackground(new java.awt.Color(255, 255, 255));
        labelEnd.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        labelEnd.setForeground(new java.awt.Color(204, 0, 0));
        labelEnd.setText("Game on!");

        labelTime.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        labelTime.setForeground(new java.awt.Color(51, 51, 51));
        labelTime.setText("Time: ");

        timerPause.setBackground(new java.awt.Color(215, 198, 172));
        timerPause.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        timerPause.setForeground(new java.awt.Color(51, 51, 51));
        timerPause.setSelected(true);
        timerPause.setText("pause");
        timerPause.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, java.awt.Color.black, java.awt.Color.lightGray));
        timerPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timerPauseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelEnd)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(timerPause, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTime)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTime)
                    .addComponent(timerPause, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelEnd)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbed2.setBackground(new java.awt.Color(239, 237, 223));
        tabbed2.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tabbed2.setToolTipText("");
        tabbed2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tabbed2.setName(""); // NOI18N

        jPanel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        resultListLarge.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(resultListLarge, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(resultListLarge, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
        );

        tabbed2.addTab("Best results: large size", jPanel3);

        resultListMedium.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(resultListMedium, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(resultListMedium, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabbed2.addTab("Best results: medium size", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(field, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelGameChose, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabbed2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(field, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelGameChose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tabbed2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbed2.getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents


    private void newGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameActionPerformed
        //clears old field
        field.removeAll();
        field.invalidate();
        field.revalidate();
        buttons.removeAll(buttons);
        iconList.removeAll(iconList);
        time = "00 : 00";
        //creates new field
        if (sizeChosen.isEmpty() || iconsChosen.isEmpty()) {
            labelEnd.setText("Choose all game options!");
        } else if (userList.getItemCount()==0) {
            labelEnd.setText("Create user!");
        } else {
            n = (sizeChosen.equals("medium")) ? 4 : 6;
            GridLayout();
            count = 0;
            timer.stop();
            labelEnd.setText("Game on!");
        }
    }//GEN-LAST:event_newGameActionPerformed

    private void timerPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timerPauseActionPerformed
        timer.stop();
    }//GEN-LAST:event_timerPauseActionPerformed

    private void addPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlayerActionPerformed
        String player = newPlayer.getText();
        if (player.isEmpty()) {
            labelEnd.setText("Enter player name!");
        } else if (player.contains(" ")) {
            labelEnd.setText("No white spaces!");
        } else if (player.length() > 10) {
            labelEnd.setText("Max 10 symbols");
        } else {
            FileWriteRead savePlayer = new FileWriteRead();
            savePlayer.savePlayer(player);
            userList.addItem(player);
            newPlayer.setText("");
            userList.setSelectedIndex(userList.getItemCount() - 1);
            labelEnd.setText("Choose your game options!");
        }
    }//GEN-LAST:event_addPlayerActionPerformed

    private void deletePlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePlayerActionPerformed
        int rem = userList.getSelectedIndex();
        FileWriteRead removePlayer = new FileWriteRead();
        removePlayer.removePlayer(String.valueOf(userList.getSelectedItem()));
        userList.removeItemAt(rem);
    }//GEN-LAST:event_deletePlayerActionPerformed
    private void AddListen() {
        imClipart.addActionListener(actionListenerT);
        imCars.addActionListener(actionListenerT);
        imPhotos.addActionListener(actionListenerT);
        sizeLarge.addActionListener(actionListenerT);
        sizeMedium.addActionListener(actionListenerT);
    }

    private void GridLayout() {
        labelTime.setText("Time: " + time);

//creates field and adds buttons from arraylist   
        field.setLayout(new GridLayout(n, n));

        for (int i = 0; i < n * n; i++) {
            buttons.add(new JButton());
            buttons.get(i).setName("b" + i);
            field.add(buttons.get(i));
            buttons.get(i).addActionListener(actionListener);
            buttons.get(i).setBackground(Color.WHITE);
        }
        createIcons createIcons = new createIcons();
        createIcons.createIcons(n, icon, sizeChosen, iconsChosen, iconList);
    }

    ActionListener actionListenerT = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent evttoggle) {
            String action = evttoggle.getActionCommand();
            switch (action) {
                case "Medium":
                    sizeMedium.setSelected(true);
                    sizeLarge.setSelected(false);
                    tabbed2.setSelectedIndex(1);
                    sizeChosen = "medium";
                    break;
                case "Large":
                    sizeMedium.setSelected(false);
                    sizeLarge.setSelected(true);
                    tabbed2.setSelectedIndex(0);
                    sizeChosen = "large";
                    break;
                case "Photos":
                    iconsChosen = "photos";
                    imPhotos.setSelected(true);
                    imClipart.setSelected(false);
                    imCars.setSelected(false);
                    break;
                case "Clipart":
                    iconsChosen = "clipart";
                    imCars.setSelected(false);
                    imPhotos.setSelected(false);
                    imClipart.setSelected(true);
                    break;
                case "Cars":
                    iconsChosen = "cars";
                    imClipart.setSelected(false);
                    imPhotos.setSelected(false);
                    imCars.setSelected(true);
                    break;
            }
        }
    };

    ActionListener actionListener = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent evt) {
            timerPause.setSelected(false);
            timer.setInitialDelay(1000);
            timer.start();
            clearIcons();

            JButton button = (JButton) evt.getSource();
            for (JButton btn : buttons) {
                if (button == btn) {
                    int name = Integer.valueOf((button.getName()).replace("b", ""));
                    button.setIcon(iconList.get(name));
                    if (selected1 == null) {
                        selected1 = button;
                        selected1.removeActionListener(actionListener);
                    } else {
                        selected2 = button;
                        selected2.removeActionListener(actionListener);
                    }
                    checkIcons();
                    break;
                }
            }
        }
    };

    private void clearIcons() {
        if (selected1 != null && selected2 != null) {
            selected1.addActionListener(actionListener);
            selected2.addActionListener(actionListener);
            if (!isMatch) {
                selected1.setIcon(null);
                selected2.setIcon(null);
            }
            selected1 = null;
            selected2 = null;
            isMatch = false;
        }
    }

    private void checkIcons() {
//checks pairs
        if (selected1 != null && selected2 != null) {
            if (selected1.getIcon() == selected2.getIcon()) {
                isMatch = true;
                selected1.setEnabled(false);
                selected2.setEnabled(false);
            }
            if (selected1.getIcon() != selected2.getIcon()) {
                isMatch = false;
            }
        }

//checks if every icons is revealed
        for (int i = 0; i < buttons.size(); i++) {
            if (buttons.get(i).getIcon() == null) {
                break;
            } else if (i == buttons.size() - 1) {
                timer.stop();
                String result = labelTime.getText() + "     Player: " + userList.getSelectedItem();
                FileWriteRead results = new FileWriteRead();
                results.saveResults(result, sizeChosen);
                results.addInfo(resultListLarge, resultListMedium);
                String best = (sizeChosen.equals("medium")) ? resultListMedium.getItem(0) : resultListLarge.getItem(0);
                if (result.equals(best.substring(9))) {
                    labelEnd.setText("Completed! Best result!");
                } else {
                    labelEnd.setText("Completed! Result saved!");
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPlayer;
    private javax.swing.JButton deletePlayer;
    private javax.swing.JPanel field;
    private javax.swing.JToggleButton imCars;
    private javax.swing.JToggleButton imClipart;
    private javax.swing.JToggleButton imPhotos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel labelBackground;
    private javax.swing.JLabel labelEnd;
    private javax.swing.JLabel labelNewPlayer;
    private javax.swing.JLabel labelPlayer;
    private javax.swing.JLabel labelTime;
    private javax.swing.JButton newGame;
    private javax.swing.JTextField newPlayer;
    private javax.swing.JPanel panelGameChose;
    private java.awt.List resultListLarge;
    private java.awt.List resultListMedium;
    private javax.swing.JToggleButton sizeLarge;
    private javax.swing.JToggleButton sizeMedium;
    private javax.swing.JTabbedPane tabbed2;
    private javax.swing.JToggleButton timerPause;
    private javax.swing.JComboBox<String> userList;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
